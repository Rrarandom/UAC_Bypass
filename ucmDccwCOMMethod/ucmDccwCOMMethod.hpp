#pragma once
#pragma warning(disable: 4005)
#pragma warning(disable: 4055)
#pragma warning(disable: 4152)
#pragma warning(disable: 4201)
#pragma warning(disable: 6102)
#pragma warning(disable: 6258)
#pragma warning(disable: 6320)
#pragma warning(disable: 6255 6263)
#pragma warning(disable: 4996)

#include <Windows.h>
#include <ntstatus.h>
#include <CommCtrl.h>
#include <shlobj.h>
#include <AccCtrl.h>
#include <cstdint>

#define C_NONE    0x00
#define C_MODRM   0x01
#define C_IMM8    0x02
#define C_IMM16   0x04
#define C_IMM_P66 0x10
#define C_REL8    0x20
#define C_REL32   0x40
#define C_GROUP   0x80
#define C_ERROR   0xff
#define PRE_ANY   0x00
#define PRE_NONE  0x01
#define PRE_F2    0x02
#define PRE_F3    0x04
#define PRE_66    0x08
#define PRE_67    0x10
#define PRE_LOCK  0x20
#define PRE_SEG   0x40
#define PRE_ALL   0xff
#define DELTA_OPCODES      0x4a
#define DELTA_FPU_REG      0xfd
#define DELTA_FPU_MODRM    0x104
#define DELTA_PREFIXES     0x13c
#define DELTA_OP_LOCK_OK   0x1ae
#define DELTA_OP2_LOCK_OK  0x1c6
#define DELTA_OP_ONLY_MEM  0x1d8
#define DELTA_OP2_ONLY_MEM 0x1e7
#define F_MODRM            0x00000001
#define F_SIB              0x00000002
#define F_IMM8             0x00000004
#define F_IMM16            0x00000008
#define F_IMM32            0x00000010
#define F_IMM64            0x00000020
#define F_DISP8            0x00000040
#define F_DISP16           0x00000080
#define F_DISP32           0x00000100
#define F_RELATIVE         0x00000200
#define F_ERROR            0x00001000
#define F_ERROR_OPCODE     0x00002000
#define F_ERROR_LENGTH     0x00004000
#define F_ERROR_LOCK       0x00008000
#define F_ERROR_OPERAND    0x00010000
#define F_PREFIX_REPNZ     0x01000000
#define F_PREFIX_REPX      0x02000000
#define F_PREFIX_REP       0x03000000
#define F_PREFIX_66        0x04000000
#define F_PREFIX_67        0x08000000
#define F_PREFIX_LOCK      0x10000000
#define F_PREFIX_SEG       0x20000000
#define F_PREFIX_REX       0x40000000
#define F_PREFIX_ANY       0x7f000000
#define PREFIX_SEGMENT_CS   0x2e
#define PREFIX_SEGMENT_SS   0x36
#define PREFIX_SEGMENT_DS   0x3e
#define PREFIX_SEGMENT_ES   0x26
#define PREFIX_SEGMENT_FS   0x64
#define PREFIX_SEGMENT_GS   0x65
#define PREFIX_LOCK         0xf0
#define PREFIX_REPNZ        0xf2
#define PREFIX_REPX         0xf3
#define PREFIX_OPERAND_SIZE 0x66
#define PREFIX_ADDRESS_SIZE 0x67

unsigned char hde64_table[] = {
  0xa5,0xaa,0xa5,0xb8,0xa5,0xaa,0xa5,0xaa,0xa5,0xb8,0xa5,0xb8,0xa5,0xb8,0xa5,
  0xb8,0xc0,0xc0,0xc0,0xc0,0xc0,0xc0,0xc0,0xc0,0xac,0xc0,0xcc,0xc0,0xa1,0xa1,
  0xa1,0xa1,0xb1,0xa5,0xa5,0xa6,0xc0,0xc0,0xd7,0xda,0xe0,0xc0,0xe4,0xc0,0xea,
  0xea,0xe0,0xe0,0x98,0xc8,0xee,0xf1,0xa5,0xd3,0xa5,0xa5,0xa1,0xea,0x9e,0xc0,
  0xc0,0xc2,0xc0,0xe6,0x03,0x7f,0x11,0x7f,0x01,0x7f,0x01,0x3f,0x01,0x01,0xab,
  0x8b,0x90,0x64,0x5b,0x5b,0x5b,0x5b,0x5b,0x92,0x5b,0x5b,0x76,0x90,0x92,0x92,
  0x5b,0x5b,0x5b,0x5b,0x5b,0x5b,0x5b,0x5b,0x5b,0x5b,0x5b,0x5b,0x6a,0x73,0x90,
  0x5b,0x52,0x52,0x52,0x52,0x5b,0x5b,0x5b,0x5b,0x77,0x7c,0x77,0x85,0x5b,0x5b,
  0x70,0x5b,0x7a,0xaf,0x76,0x76,0x5b,0x5b,0x5b,0x5b,0x5b,0x5b,0x5b,0x5b,0x5b,
  0x5b,0x5b,0x86,0x01,0x03,0x01,0x04,0x03,0xd5,0x03,0xd5,0x03,0xcc,0x01,0xbc,
  0x03,0xf0,0x03,0x03,0x04,0x00,0x50,0x50,0x50,0x50,0xff,0x20,0x20,0x20,0x20,
  0x01,0x01,0x01,0x01,0xc4,0x02,0x10,0xff,0xff,0xff,0x01,0x00,0x03,0x11,0xff,
  0x03,0xc4,0xc6,0xc8,0x02,0x10,0x00,0xff,0xcc,0x01,0x01,0x01,0x00,0x00,0x00,
  0x00,0x01,0x01,0x03,0x01,0xff,0xff,0xc0,0xc2,0x10,0x11,0x02,0x03,0x01,0x01,
  0x01,0xff,0xff,0xff,0x00,0x00,0x00,0xff,0x00,0x00,0xff,0xff,0xff,0xff,0x10,
  0x10,0x10,0x10,0x02,0x10,0x00,0x00,0xc6,0xc8,0x02,0x02,0x02,0x02,0x06,0x00,
  0x04,0x00,0x02,0xff,0x00,0xc0,0xc2,0x01,0x01,0x03,0x03,0x03,0xca,0x40,0x00,
  0x0a,0x00,0x04,0x00,0x00,0x00,0x00,0x7f,0x00,0x33,0x01,0x00,0x00,0x00,0x00,
  0x00,0x00,0xff,0xbf,0xff,0xff,0x00,0x00,0x00,0x00,0x07,0x00,0x00,0xff,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,
  0x00,0x00,0x00,0xbf,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7f,0x00,0x00,
  0xff,0x40,0x40,0x40,0x40,0x41,0x49,0x40,0x40,0x40,0x40,0x4c,0x42,0x40,0x40,
  0x40,0x40,0x40,0x40,0x40,0x40,0x4f,0x44,0x53,0x40,0x40,0x40,0x44,0x57,0x43,
  0x5c,0x40,0x60,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,
  0x40,0x40,0x64,0x66,0x6e,0x6b,0x40,0x40,0x6a,0x46,0x40,0x40,0x44,0x46,0x40,
  0x40,0x5b,0x44,0x40,0x40,0x00,0x00,0x00,0x00,0x06,0x06,0x06,0x06,0x01,0x06,
  0x06,0x02,0x06,0x06,0x00,0x06,0x00,0x0a,0x0a,0x00,0x00,0x00,0x02,0x07,0x07,
  0x06,0x02,0x0d,0x06,0x06,0x06,0x0e,0x05,0x05,0x02,0x02,0x00,0x00,0x04,0x04,
  0x04,0x04,0x05,0x06,0x06,0x06,0x00,0x00,0x00,0x0e,0x00,0x00,0x08,0x00,0x10,
  0x00,0x18,0x00,0x20,0x00,0x28,0x00,0x30,0x00,0x80,0x01,0x82,0x01,0x86,0x00,
  0xf6,0xcf,0xfe,0x3f,0xab,0x00,0xb0,0x00,0xb1,0x00,0xb3,0x00,0xba,0xf8,0xbb,
  0x00,0xc0,0x00,0xc1,0x00,0xc7,0xbf,0x62,0xff,0x00,0x8d,0xff,0x00,0xc4,0xff,
  0x00,0xc5,0xff,0x00,0xff,0xff,0xeb,0x01,0xff,0x0e,0x12,0x08,0x00,0x13,0x09,
  0x00,0x16,0x08,0x00,0x17,0x09,0x00,0x2b,0x09,0x00,0xae,0xff,0x07,0xb2,0xff,
  0x00,0xb4,0xff,0x00,0xb5,0xff,0x00,0xc3,0x01,0x00,0xc7,0xff,0xbf,0xe7,0x08,
  0x00,0xf0,0x02,0x00
};

#define UCM_DEFINE_GUID(name, l, w1, w2, b1, b2, b3, b4, b5, b6, b7, b8) \
     EXTERN_C const GUID DECLSPEC_SELECTANY name \
                = { l, w1, w2, { b1, b2,  b3,  b4,  b5,  b6,  b7,  b8 } }  

#define T_ELEVATION_MONIKER_ADMIN            L"Elevation:Administrator!new:"
#define T_CLSID_CMSTPLUA                     L"{3E5FC7F9-9A51-4367-9063-A120244FBEC7}"
#define T_CLSID_ColorDataProxy               L"{D2E7041B-2927-42fb-8E9F-7CE93B6DC937}"
#define T_DISPLAY_CALIBRATION				 L"Software\\Microsoft\\Windows NT\\CurrentVersion\\ICM\\Calibration"
#define T_CALIBRATOR_VALUE					 L"DisplayCalibrator"

UCM_DEFINE_GUID(IID_ICMLuaUtil, 0x6EDD6D74, 0xC007, 0x4E75, 0xB7, 0x6A, 0xE5, 0x74, 0x09, 0x95, 0xE2, 0x4C);
UCM_DEFINE_GUID(IID_IColorDataProxy, 0x0A16D195, 0x6F47, 0x4964, 0x92, 0x87, 0x9F, 0x4B, 0xAB, 0x6D, 0x98, 0x27);

typedef interface ICMLuaUtil ICMLuaUtil;

typedef struct ICMLuaUtilVtbl {

	BEGIN_INTERFACE

		HRESULT(STDMETHODCALLTYPE* QueryInterface)(
			__RPC__in ICMLuaUtil* This,
			__RPC__in REFIID riid,
			_COM_Outptr_  void** ppvObject);

	ULONG(STDMETHODCALLTYPE* AddRef)(
		__RPC__in ICMLuaUtil* This);

	ULONG(STDMETHODCALLTYPE* Release)(
		__RPC__in ICMLuaUtil* This);

	HRESULT(STDMETHODCALLTYPE* SetRasCredentials)(
		__RPC__in ICMLuaUtil* This);

	HRESULT(STDMETHODCALLTYPE* SetRasEntryProperties)(
		__RPC__in ICMLuaUtil* This);

	HRESULT(STDMETHODCALLTYPE* DeleteRasEntry)(
		__RPC__in ICMLuaUtil* This);

	HRESULT(STDMETHODCALLTYPE* LaunchInfSection)(
		__RPC__in ICMLuaUtil* This);

	HRESULT(STDMETHODCALLTYPE* LaunchInfSectionEx)(
		__RPC__in ICMLuaUtil* This);

	HRESULT(STDMETHODCALLTYPE* CreateLayerDirectory)(
		__RPC__in ICMLuaUtil* This);

	HRESULT(STDMETHODCALLTYPE* ShellExec)(
		__RPC__in ICMLuaUtil* This,
		_In_     LPCTSTR lpFile,
		_In_opt_  LPCTSTR lpParameters,
		_In_opt_  LPCTSTR lpDirectory,
		_In_      ULONG fMask,
		_In_      ULONG nShow);

	HRESULT(STDMETHODCALLTYPE* SetRegistryStringValue)(
		__RPC__in ICMLuaUtil* This,
		_In_      HKEY hKey,
		_In_opt_  LPCTSTR lpSubKey,
		_In_opt_  LPCTSTR lpValueName,
		_In_      LPCTSTR lpValueString);

	HRESULT(STDMETHODCALLTYPE* DeleteRegistryStringValue)(
		__RPC__in ICMLuaUtil* This,
		_In_      HKEY hKey,
		_In_      LPCTSTR lpSubKey,
		_In_      LPCTSTR lpValueName);

	HRESULT(STDMETHODCALLTYPE* DeleteRegKeysWithoutSubKeys)(
		__RPC__in ICMLuaUtil* This);

	HRESULT(STDMETHODCALLTYPE* DeleteRegTree)(
		__RPC__in ICMLuaUtil* This);

	HRESULT(STDMETHODCALLTYPE* ExitWindowsFunc)(
		__RPC__in ICMLuaUtil* This);

	HRESULT(STDMETHODCALLTYPE* AllowAccessToTheWorld)(
		__RPC__in ICMLuaUtil* This);

	HRESULT(STDMETHODCALLTYPE* CreateFileAndClose)(
		__RPC__in ICMLuaUtil* This);

	HRESULT(STDMETHODCALLTYPE* DeleteHiddenCmProfileFiles)(
		__RPC__in ICMLuaUtil* This);

	HRESULT(STDMETHODCALLTYPE* CallCustomActionDll)(
		__RPC__in ICMLuaUtil* This);

	HRESULT(STDMETHODCALLTYPE* RunCustomActionExe)(
		__RPC__in       ICMLuaUtil* This,
		_In_            LPCTSTR lpFile,
		_In_opt_        LPCTSTR lpParameters,
		_COM_Outptr_    LPCTSTR* pszHandleAsHexString);

	HRESULT(STDMETHODCALLTYPE* SetRasSubEntryProperties)(
		__RPC__in ICMLuaUtil* This);

	HRESULT(STDMETHODCALLTYPE* DeleteRasSubEntry)(
		__RPC__in ICMLuaUtil* This);

	HRESULT(STDMETHODCALLTYPE* SetCustomAuthData)(
		__RPC__in ICMLuaUtil* This);

	END_INTERFACE

} *PICMLuaUtilVtbl;

interface ICMLuaUtil { CONST_VTBL struct ICMLuaUtilVtbl* lpVtbl; };

typedef interface IColorDataProxy IColorDataProxy;

typedef struct IColorDataProxyVtbl {

	BEGIN_INTERFACE

		HRESULT(STDMETHODCALLTYPE* QueryInterface)(
			__RPC__in IColorDataProxy* This,
			__RPC__in REFIID riid,
			_COM_Outptr_  void** ppvObject);

	ULONG(STDMETHODCALLTYPE* AddRef)(
		__RPC__in IColorDataProxy* This);

	ULONG(STDMETHODCALLTYPE* Release)(
		__RPC__in IColorDataProxy* This);

	HRESULT(STDMETHODCALLTYPE* Method1)(
		__RPC__in IColorDataProxy* This);

	HRESULT(STDMETHODCALLTYPE* Method2)(
		__RPC__in IColorDataProxy* This);

	HRESULT(STDMETHODCALLTYPE* Method3)(
		__RPC__in IColorDataProxy* This);

	HRESULT(STDMETHODCALLTYPE* Method4)(
		__RPC__in IColorDataProxy* This);

	HRESULT(STDMETHODCALLTYPE* Method5)(
		__RPC__in IColorDataProxy* This);

	HRESULT(STDMETHODCALLTYPE* Method6)(
		__RPC__in IColorDataProxy* This);

	HRESULT(STDMETHODCALLTYPE* Method7)(
		__RPC__in IColorDataProxy* This);

	HRESULT(STDMETHODCALLTYPE* Method8)(
		__RPC__in IColorDataProxy* This);

	HRESULT(STDMETHODCALLTYPE* Method9)(
		__RPC__in IColorDataProxy* This);

	HRESULT(STDMETHODCALLTYPE* Method10)(
		__RPC__in IColorDataProxy* This);

	HRESULT(STDMETHODCALLTYPE* Method11)(
		__RPC__in IColorDataProxy* This);

	HRESULT(STDMETHODCALLTYPE* LaunchDccw)(
		__RPC__in IColorDataProxy* This,
		_In_      HWND hwnd);

	END_INTERFACE

} *PIColorDataProxyVtbl;

interface IColorDataProxy { CONST_VTBL struct IColorDataProxyVtbl* lpVtbl; };
